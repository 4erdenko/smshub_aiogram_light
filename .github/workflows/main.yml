name: Test. Build. Deploy.

on:
  push:
    branches:
      - master

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8==6.0.0 flake8-isort==6.0.0
          pip install -r ./requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8 .
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t smshub_image .

      - name: Run Docker container
        run: docker run -d -e BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} --name smshub_bot smshub_image python3 main.py

      - name: Check if container is still running
        run: |
          if ! docker ps --filter "name=smshub_bot" --filter "status=running" | grep -q smshub_bot; then
            echo "Container stopped unexpectedly";
            exit 1;
          fi

      - name: Wait for bot to initialize
        run: sleep 10

      - name: Check Docker logs
        run: docker logs smshub_bot

      - name: Stop Docker container
        run: docker stop smshub_bot

  docker-push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ github.repository }}:latest
  deploy:
    needs: docker-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy code via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "${{ secrets.FOLDER_NAME }}"

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}

          script: |
            mkdir -p ${{ secrets.FOLDER_NAME }}
            cd ${{ secrets.FOLDER_NAME }}
            cat <<EOF > .env
            ${{ secrets.ENV }}
            EOF
            sudo docker compose down
            sudo docker system prune -a -f
            sudo docker compose pull
            sudo docker compose up -d